{"version":3,"sources":["components/layout/Navbar.js","components/workspace/sampleData.js","components/workspace/SpendMoneyBox.js","components/workspace/SpendMoney.js","components/App.js","index.js"],"names":["Navbar","React","useState","state","setState","menuState","setMenuState","acMenu","Boolean","handleMenuClose","toggleDrawer","open","event","type","key","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","SwipeableDrawer","onClose","onOpen","className","role","onKeyDown","aria-controls","aria-haspopup","Avatar","alt","src","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","style","flex","currentTarget","Menu","id","anchorEl","keepMounted","TransitionComponent","Fade","MenuItem","data","date","time","hint","amount","SpendMoneyBox","props","Grid","item","xs","sm","index","useStyles","makeStyles","theme","root","speedDial","bottom","spacing","right","singleBox","actions","icon","name","SpendMoney","classes","setOpen","handleClose","container","justify","SpeedDial","ariaLabel","SpeedDialIcon","map","action","SpeedDialAction","tooltipTitle","sampleData","App","rootElement","document","getElementById","ReactDOM","render","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","scope","err","getRegistrations","registrations","unregister"],"mappings":"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","file":"static/js/main.684d3bf0.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\n// import MailIcon from \"@material-ui/icons/Mail\";\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EqualizerOutlinedIcon from '@material-ui/icons/EqualizerOutlined';\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\n\r\nfunction Navbar() {\r\n  const [state, setState] = React.useState(false);\r\n  const [menuState, setMenuState] = React.useState(null);\r\n  const acMenu = Boolean(menuState);\r\n\r\n  // For handling menu links and menu\r\n  const handleMenuClick = (event) => {\r\n    setMenuState(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuState(null);\r\n  };\r\n\r\n  // For handling drawer open and close\r\n  const toggleDrawer = (open) => (event) => {\r\n    // Except keys\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState(open);\r\n  };\r\n\r\n  // Show the list of Drawer links\r\n  const list = () => {\r\n    return (\r\n      <div\r\n        className='Sidebar'\r\n        role='presentation'\r\n        onClick={toggleDrawer(false)}\r\n        onKeyDown={toggleDrawer(false)}\r\n      >\r\n        <IconButton\r\n          aria-label='account of current user'\r\n          aria-controls='fade-menu'\r\n          aria-haspopup='true'\r\n          color='inherit'\r\n          className='avatar'\r\n        >\r\n          <Avatar alt='Mdjack' src='/images/avatar.png' />\r\n        </IconButton>\r\n        <List>\r\n          {/* Analytics  */}\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <EqualizerOutlinedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Analytics' />\r\n          </ListItem>\r\n          {/* Spend money  */}\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <MonetizationOnOutlinedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Spend Money' />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            color='inherit'\r\n            aria-label='menu'\r\n            onClick={toggleDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* Sidebar items  */}\r\n          <SwipeableDrawer\r\n            open={state}\r\n            onClose={toggleDrawer(false)}\r\n            onOpen={toggleDrawer(true)}\r\n          >\r\n            {list()}\r\n          </SwipeableDrawer>\r\n          {/* To separate them  */}\r\n          <span style={{ flex: 1 }} />\r\n          <IconButton\r\n            aria-label='more'\r\n            aria-controls='long-menu'\r\n            aria-haspopup='true'\r\n            style={{ color: 'white' }}\r\n            onClick={handleMenuClick}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          {/* Menu Items  */}\r\n          <Menu\r\n            id='fade-menu'\r\n            anchorEl={menuState}\r\n            keepMounted\r\n            open={acMenu}\r\n            onClose={handleMenuClose}\r\n            TransitionComponent={Fade}\r\n          >\r\n            <MenuItem onClick={handleMenuClose}>\r\n              <IconButton>\r\n                <AccountCircleRoundedIcon />\r\n              </IconButton>\r\n              Profile\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>\r\n            <IconButton>\r\n                <ExitToAppRoundedIcon />\r\n              </IconButton>\r\n              Logout\r\n            </MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","const data = [\r\n    {\r\n        date : '10/20',\r\n        time : '10:00 Am',\r\n        hint : 'For Hospital',\r\n        amount: '1100'\r\n    },\r\n    {\r\n        date : '13/20',\r\n        time : '12:00 Pm',\r\n        hint : 'For Tablet',\r\n        amount: '110'\r\n    },\r\n    {\r\n        date : '11/20',\r\n        time : '3:00 Pm',\r\n        hint : 'For Lunch',\r\n        amount: '150'\r\n    },\r\n    {\r\n        date : '12/20',\r\n        time : '4:00 Pm',\r\n        hint : 'For food',\r\n        amount: '20'\r\n    },{\r\n        date : '17/20',\r\n        time : '2:00 Pm',\r\n        hint : 'For Snacks',\r\n        amount: '40'\r\n    }\r\n];\r\n\r\nexport default data;\r\n\r\n","import React from 'react';\r\nimport {IconButton, Grid } from '@material-ui/core';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport EventAvailableOutlinedIcon from '@material-ui/icons/EventAvailableOutlined';\r\nimport WatchLaterOutlinedIcon from '@material-ui/icons/WatchLaterOutlined';\r\n// import SpeedDial from '@material-ui/lab/SpeedDial';\r\n// import SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\n// import SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\n// import FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\n// import SaveIcon from '@material-ui/icons/Save';\r\n// import PrintIcon from '@material-ui/icons/Print';\r\n\r\n// const actions = [\r\n//   { icon: <FileCopyIcon />, name: 'Copy' },\r\n//   { icon: <SaveIcon />, name: 'Save' },\r\n//   { icon: <PrintIcon />, name: 'Print' },\r\n// ];\r\n\r\nfunction SpendMoneyBox(props) {\r\n//   const [openCenterBtn, setopenCenterBtn] = React.useState(false);\r\n\r\n//   const handleCenterBtnClose = () => {\r\n//     setopenCenterBtn(false);\r\n//   };\r\n\r\n//   const handleCenterBtnOpen = () => {\r\n//     setopenCenterBtn(true);\r\n//   };\r\n  return (\r\n    <Grid item xs={12} sm={6} className='spendMoneyContainer' key={props.index}>\r\n      <div className='top'>\r\n        <p className='date'>\r\n          <EventAvailableOutlinedIcon className='icon' />\r\n          {props.date}\r\n        </p>\r\n        <p className='time'>\r\n          <WatchLaterOutlinedIcon className='icon' />\r\n          {props.time}\r\n        </p>\r\n      </div>\r\n      <div className='bottom'>\r\n        <p>{props.hint}</p>\r\n        <p>\r\n          Rs.<span>{props.amount}</span>/-\r\n        </p>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SpendMoneyBox;\r\n","import React from 'react';\r\n// import 'public/css/styles.css';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import AddIcon from '@material-ui/icons/Add';\r\nimport sampleData from './sampleData';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SpendMoneyBox from './SpendMoneyBox';\r\n// import DateRangeIcon from '@material-ui/icons/DateRange';\r\n// import AccessTimeIcon from '@material-ui/icons/AccessTime';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n  },\r\n  speedDial: {\r\n    position: 'fixed',\r\n    '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction singleBox(data, index) {\r\n  return (\r\n    <SpendMoneyBox\r\n      key={index}\r\n      date={data.date}\r\n      time={data.time}\r\n      hint={data.hint}\r\n      amount={data.amount}\r\n    />\r\n  );\r\n}\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: 'Copy' },\r\n  { icon: <SaveIcon />, name: 'Save' },\r\n  { icon: <PrintIcon />, name: 'Print' },\r\n  { icon: <ShareIcon />, name: 'Share' },\r\n  { icon: <FavoriteIcon />, name: 'Like' },\r\n];\r\n\r\nfunction SpendMoney() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify='space-evenly' className='s-container'>\r\n      <SpeedDial\r\n        ariaLabel='SpeedDial example'\r\n        className={classes.speedDial}\r\n        icon={<SpeedDialIcon />}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        open={open}\r\n      >\r\n        {actions.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={handleClose}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n      {sampleData.map(singleBox)}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SpendMoney;\r\n","import React from 'react';\nimport Navbar from './layout/Navbar';\nimport SpendMoney from './workspace/SpendMoney';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <SpendMoney />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n\nif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker.register('./service-worker.js').then(\n      function (registration) {\n        // Registration was successful\n        console.log(\n          'ServiceWorker registration successful with scope: ',\n          registration.scope\n        );\n      },\n      function (err) {\n        // registration failed :(\n        console.log('ServiceWorker registration failed: ', err);\n      }\n    );\n  });\n} else {\n  // Uninstall when developement mode\n  console.log('service worker uninstalled for development...');\n\n  navigator.serviceWorker.getRegistrations().then(function (registrations) {\n    for (let registration of registrations) {\n      registration.unregister();\n    }\n  });\n}\n"],"sourceRoot":""}